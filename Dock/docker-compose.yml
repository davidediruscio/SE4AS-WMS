version: "3.8"

services:

  # Managed System simulator component
  zone:
    image: zone-simulator
    container_name: zone_simulator
    build:
      context: ./zone-simulator/
      dockerfile: Dockerfile
    volumes:
      - /data/zone-simulator
    networks:
      - iot
    depends_on:
      - mosquitto
    restart: always

  # MAPE COMPONENTS

  telegraf:
    image: telegraf
    container_name: MAPE_MONITOR
    restart: always
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot

  
  water-system-analyzer:
    image: water-system-analyzer
    restart: always
    container_name: MAPE_ANALYZER
    build:
      context: ./water-system-analyzer/
      dockerfile: Dockerfile
    volumes:
      - /data/water-system-analyzer
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot

  water-system-planner:
    image: water-system-planner
    container_name: MAPE_PLANNER
    build:
      context: ./water-system-planner/
      dockerfile: Dockerfile
    volumes:
      - /data/water-system-planner
    ports:
      - "8081:8081"
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot

  # water-system-planner:
  #   image: water-system-planner-advanced
  #   container_name: MAPE_PLANNER_PROACTIVE
  #   #profiles:
  #   #  - donotstart
  #   build:
  #     context: ./water-system-planner-advanced/
  #     dockerfile: Dockerfile
  #   volumes:
  #     - /data/water-system-planner-advanced
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - mosquitto
  #     - influxdb
  #   networks:
  #     - iot

  water-system-executor:
    image: water-system-executor
    container_name: MAPE_EXECUTOR
    build:
      context: ./water-system-executor/
      dockerfile: Dockerfile
    volumes:
      - /data/water-system-executor
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot



  # OTHER COMPONENTS

  # MOSQUITTO BROKER
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto_container
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - iot
  
  #Â INFLUXDB - KNOWLEDGE
  influxdb:
    image: influxdb:1.8
    container_name: KNOWLEDGE
    restart: always
    ports:
      - "8086:8086"
    networks:
      - iot
    environment:
      - INFLUXDB_DB=telegraf
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=secretpassword
      - INFLUXDB_USER=telegraf
      - INFLUXDB_USER_PASSWORD=secretpassword
  
  # GRAFANA AS DASHBOARD 
  grafana:
    image: grafana/grafana
    container_name: grafana_container
    volumes:
      - ./grafana-data:/var/lib/grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - iot
    depends_on:
      - influxdb

  
networks:
  iot:
